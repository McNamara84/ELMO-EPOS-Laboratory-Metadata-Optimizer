name: Selenium Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  selenium-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, mysql, zip
          coverage: xdebug

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      # PHP-Abhängigkeiten per Composer
      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      # Schritt: Package.json nur für den CI anlegen & side-runner installieren
      - name: Install side-runner (ephemer)
        run: |
          npm init -y
          npm install --save-dev @seleniumhq/side-runner

      # Docker installieren
      - name: Install Docker (Engine + Compose v2 plugin)
        run: |
          curl -fsSL https://get.docker.com | sudo sh
          docker --version
          docker compose version

      - name: Start services (docker compose)
        run: docker compose up -d

      - name: Wait for services
        run: |
          for i in {1..30}; do
            if curl -s http://localhost:8000/ >/dev/null && \
               curl -s http://localhost:4444/wd/hub/status >/dev/null; then
              echo "PHP und Selenium sind erreichbar."
              break
            fi
            echo "Warten auf Services..."
            sleep 2
          done

      - name: Run Selenium tests
        run: |
          npx @seleniumhq/side-runner \
            tests/Selenium/Tests_MDE.side \
            --capabilities "browserName=chrome" \
            --server http://localhost:4444/wd/hub \
            --base-url http://localhost:8000 \
            --timeout 100000 \
            --output-directory=./test-output \
            --output-format=junit

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logs-and-results
          path: |
            test-output/
            *.log
            *.php
            install_output.log

      - name: Tear down
        if: always()
        run: docker compose down
