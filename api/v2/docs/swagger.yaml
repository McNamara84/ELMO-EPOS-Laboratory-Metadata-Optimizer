openapi: 3.1.0
info:
  title: Metadata Editor 2 - MSL Edition
  description: |-
    This is the Metadata Editor API V2 from GFZ Data Services based on the OpenAPI 3.1 specification. You can find the new version on our [test server](https://mde2.cats4future.de).

    Some useful links:
    - [The MDE2-MSL repository](https://github.com/McNamara84/gfz-metadata-editor-msl-v2)
    - [Test Server](https://mde2.cats4future.de)
  termsOfService: https://github.com/McNamara84/gfz-metadata-editor-msl-v2
  contact:
    email: ehrmann@gfz-potsdam.de
  license:
    name: MIT
    url: https://raw.githubusercontent.com/McNamara84/gfz-metadata-editor-msl-v2/refs/heads/main/LICENSE.md
  version: 1.6.0
externalDocs:
  description: Documentation of the API V1 at GitHub
  url: https://github.com/McNamara84/gfz-metadata-editor-msl-v2#api-endpunkte
servers:
  - url: https://mde2.cats4future.de/api/v2
tags:
  - name: general
    description: General operations for health checks and version
  - name: update
    description: Operations about updating the vocabularies
  - name: vocabularies
    description: Operations related to retrieving vocabularies
paths:
  /update/vocabs/msl:
    get:
      tags:
        - update
      summary: Update MSL vocabularies
      description: Update vocabularies for MSL (Materials Science Laboratory)
      operationId: getMslVocab
      parameters:
        - in: query
          name: type
          schema:
            type: string
            enum:
              [
                all,
                analogue,
                geochemistry,
                geologicalage,
                geologicalsetting,
                materials,
                microscopy,
                paleomagnetism,
                porefluids,
                rockphysics,
              ]
          description: Type of vocabulary to update. If not provided, defaults to 'all'.
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  updatedTypes:
                    type: object
                    additionalProperties:
                      type: string
                example:
                  message: "Updating vocab for type: all"
                  updatedTypes:
                    analogue: "Updated to version 1.5"
                    geochemistry: "Updated to version 1.4"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /update/vocabs/msl/{type}:
    get:
      tags:
        - update
      summary: Update specific MSL vocabulary
      description: Update a specific vocabulary type for MSL
      operationId: getMslVocabByType
      parameters:
        - in: path
          name: type
          required: true
          schema:
            type: string
            enum:
              [
                analogue,
                geochemistry,
                geologicalage,
                geologicalsetting,
                materials,
                microscopy,
                paleomagnetism,
                porefluids,
                rockphysics,
              ]
          description: Type of vocabulary to update
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  updatedTypes:
                    type: object
                    additionalProperties:
                      type: string
                example:
                  message: "Updating vocab for type: geochemistry"
                  updatedTypes:
                    geochemistry: "Updated to version 1.4"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /update/vocabs/msl/labs:
    get:
      tags:
        - update
      summary: Update MSL Labs vocabulary
      description: Fetch and update the MSL Labs vocabulary from the GitHub repository. The response includes the updated labs with their IDs.
      operationId: updateMslLabs
      responses:
        "200":
          description: MSL Labs vocabulary successfully updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MSLLabsUpdateResponse"
              example:
                message: "MSL Labs vocabulary successfully updated"
                labs:
                  - id: "lab1"
                    name: "Laboratory A"
                    affiliation: "University X"
                  - id: "lab2"
                    name: "Laboratory B"
                    affiliation: "Institute Y"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Error saving JSON file: Permission denied"

  /general/alive:
    get:
      tags:
        - general
      summary: Health check
      description: Check if the API is responsive
      operationId: getAlive
      responses:
        "200":
          description: API is responsive
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthResponse"
              example:
                message: "I'm still alive..."
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "An error occurred during health check"

  /vocabs/sciencekeywords:
    get:
      tags:
        - vocabularies
      summary: Get GCMD Science Keywords
      description: Retrieve the controlled vocabulary of GCMD Science Keywords from NASA as a JSON string
      operationId: getGcmdScienceKeywords
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VocabularyTree"
              example:
                id: "https://gcmd.earthdata.nasa.gov/kms/concept/1eb0ea0a-312c-4d74-8d42-6f1ad758f999"
                text: "Science Keywords"
                language: "en"
                scheme: "NASA/GCMD Earth Science Keywords"
                schemeURI: "https://gcmd.earthdata.nasa.gov/kms/concepts/concept_scheme/sciencekeywords"
                description: ""
                children:
                  - id: "https://gcmd.earthdata.nasa.gov/kms/concept/e9f67a66-e9fc-435c-b720-ae32a2c3d8f5"
                    text: "EARTH SCIENCE"
                    language: "en"
                    scheme: "NASA/GCMD Earth Science Keywords"
                    schemeURI: "https://gcmd.earthdata.nasa.gov/kms/concepts/concept_scheme/sciencekeywords"
                    description: "Any of various sciences that deal with the Earth."
                    children:
                      - id: "https://gcmd.earthdata.nasa.gov/kms/concept/c47f6052-634e-40ef-a5ac-13f69f6f4c2a"
                        text: "ATMOSPHERE"
                        language: "en"
                        scheme: "NASA/GCMD Earth Science Keywords"
                        schemeURI: "https://gcmd.earthdata.nasa.gov/kms/concepts/concept_scheme/sciencekeywords"
                        description: "A gaseous envelope gravitationally bound to a celestial body."
                        children:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "An error occurred while fetching Science Keywords"

  /vocabs/roles:
    get:
      tags:
        - vocabularies
      summary: Retrieve roles based on type
      description: Get a list of roles filtered by type (`all`, `person`, `institution`, or `both`).
      operationId: getRoles
      parameters:
        - in: query
          name: type
          schema:
            type: string
            enum:
              - all
              - person
              - institution
              - both
          description: Type of roles to retrieve. Defaults to 'all' if not specified.
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Role"
              example:
                - id: 1
                  name: "Author"
                  forInstitutions: 0
                - id: 2
                  name: "Editor"
                  forInstitutions: 1
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Invalid roles type specified"
        "404":
          description: No roles found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "No roles found"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Database error: Connection failed"
components:
  schemas:
    VocabularyUpdate:
      type: object
      properties:
        message:
          type: string
          example: "Updating vocab for type: all"
        updatedTypes:
          type: object
          additionalProperties:
            type: string
          example:
            analogue: "Updated to version 1.5"
            geochemistry: "Updated to version 1.4"

    MSLLabsUpdateResponse:
      type: object
      properties:
        message:
          type: string
          example: "MSL Labs vocabulary successfully updated"
        labs:
          type: array
          items:
            $ref: "#/components/schemas/MSLLab"
      required:
        - message
        - labs

    MSLLab:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the lab
          example: "lab1"
        name:
          type: string
          description: Name of the laboratory
          example: "Laboratory A"
        affiliation:
          type: string
          description: Affiliation of the laboratory
          example: "University X"
      required:
        - id
        - name
        - affiliation

    Error:
      type: object
      properties:
        error:
          type: string
          examples:
            - "An error occurred"
            - "Fehler beim Abrufen der Daten von GitHub: Could not resolve host: github.com"
            - "Fehler beim Decodieren der JSON-Daten: Syntax error"
            - "Error encoding data to JSON: Malformed UTF-8 characters, possibly incorrectly encoded"
            - "Error saving JSON file: Permission denied"
            - "Invalid type specified"
            - "No roles found"
            - "Database error: Connection failed"

    HealthResponse:
      type: object
      properties:
        message:
          type: string
          example: "I'm still alive..."

    VocabularyTree:
      type: object
      properties:
        id:
          type: string
        text:
          type: string
        language:
          type: string
        scheme:
          type: string
        schemeURI:
          type: string
        description:
          type: string
        children:
          type: array
          items:
            $ref: "#/components/schemas/VocabularyTree"
      required:
        - id
        - text
        - language
        - scheme
        - schemeURI

    Role:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Author"
        forInstitutions:
          type: integer
          description: |
            Indicates the type of institution:
            - `0`: for persons
            - `1`: for institutions
            - `2`: for both
          example: 0
      required:
        - id
        - name
        - forInstitutions

  securitySchemes:
    msl_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/login.jsp
          scopes:
            write:vocabs: modify vocabularies
            read:vocabs: read vocabularies
    api_key:
      type: apiKey
      name: api_key
      in: header
